Public Function CalculatePrice(ISIN As String, PricingDate As Date, priceT_1 As Double) As Double
    Dim cn As Object
    Dim rs As Object
    Dim strSql As String
    Dim issueDate As Date
    Dim maturityDate As Variant
    Dim spread As Double
    Dim referenceRate As Double
    Dim initialSpread As Double
    Dim rerating As Double
    Dim nbDays As Long
    Dim calc As Boolean
    Dim issuePrice As Double
    Dim Price As Double
    
    ' Pour initialiser la connexion à la base de données
    Set cn = CreateObject("ADODB.Connection")
    cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & sFullPath & ";Persist Security Info=False;"
    ' Pour récupérer les données de la table STATIC DATA pour l'ISIN donné
    strSql = "SELECT ISD_ISSUE_DATE, ISD_MATURITY_DATE, ISD_SPREAD, ISD_RATE, ISD_ISSUE_PRICE FROM ISSUANCE_STATIC_DATA WHERE ISD_ISIN='" & ISIN & "'"
    Set rs = cn.Execute(strSql)
    If Not rs.EOF Then
        ' Pour récupérer les données de la requête
        issueDate = rs("ISD_ISSUE_DATE").Value
        issuePrice = rs("ISD_ISSUE_PRICE").Value
        maturityDate = rs("ISD_MATURITY_DATE").Value
        initialSpread = rs("ISD_SPREAD").Value
        refRate = rs("ISD_RATE").Value
        'Pour récupérer le nom de la colonne du rate
        Select Case refRate
            Case "ESTER"
                referenceField = "MI_EST"
            Case "SONIA"
                referenceField = "MI_SON"
            Case "FED FUNDS"
                referenceField = "MI_FF"
            Case "EONIA"
                referenceField = "MI_EON"
            Case "EURIBOR 3M"
                referenceField = "MI_E3M"
            Case "LIBOR 3M"
                referenceField = "MI_L3M_USD"
        End Select
        ' Pour vérifier si la date de pricing est dans la fenêtre [issue;maturity] et pour verifier si la date de maturité existe
        calc = False
        If IsNull(maturityDate) Then
            If PricingDate >= issueDate Then
                calc = True
            End If
        Else
            If PricingDate >= issueDate And PricingDate <= maturityDate Then
                calc = True
            End If
        End If
        If calc Then
            spread = initialSpread ' Récupération du spread initial
            ' Récupération du taux de référence spécifique pour l'ISIN donné
            strSql = "SELECT " & referenceField & " FROM MONETARY_INDEX WHERE MI_DATE=#" & PricingDate & "#"
            Set rs = cn.Execute(strSql)
            If Not rs.EOF Then
                referenceRate = IIf(IsNull(rs(referenceField).Value), 0, rs(referenceField).Value)
                ' Récupération du dernier rerating antérieur ou égal à la date donnée
                strSql = "SELECT TOP 1 IRD_SPREAD FROM ISSUANCE_RATE_DATA WHERE IRD_ISIN='" & ISIN & "' AND IRD_DATE <=#" & PricingDate & "# ORDER BY IRD_DATE DESC"
                Set rs = cn.Execute(strSql)
                If Not rs.EOF Then
                    rerating = rs("IRD_SPREAD").Value
                End If
                ' Pour calculer le nombre de jours entre la date donnée et la date d'émission
                nbDays = PricingDate - issueDate
                If priceT_1 = -1 Then
                    Price = issuePrice
                Else
                    Price = priceT_1
                End If
                ' Pour appliquer la formule de calcul de prix
                CalculatePrice = Price * (1 + spread + referenceRate - rerating) * (nbDays / 360)
            Else
                ' retourner à -1
                CalculatePrice = -1
            End If
        Else
            '  retourner -1
            CalculatePrice = -1
        End If
    Else
        '  retourner -1 si l'ISIN n'est pas trouvé dans la table STATIC DATA
        CalculatePrice = -1
    End If
' Fermeture de la connexion
    cn.Close
End Function



Public Function ExistenceDATA(ISIN As String, PricingDate As Date) As Boolean
    Dim cn As Object
    Dim rs As Object
    Dim strSql As String
    
    ' Initialisation de la connexion à la base de données
    Set cn = CreateObject("ADODB.Connection")
    cn.Open "Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" & sFullPath & ";Persist Security Info=False;"
    ' Construction de la requête SQL pour vérifier l'existence des données
    strSql = "SELECT COUNT(*) as DataCount FROM ISSUANCE_DYNAMIC_DATA WHERE IDD_ISIN='" & ISIN & "' AND IDD_DATE=#" & PricingDate & "#"
    ' Exécution de la requête SQL
    Set rs = cn.Execute(strSql)
    ' Vérification du résultat
    If rs("DataCount").Value > 0 Then
        ExistenceDATA = True
    Else
        CExistenceDATA = False
    End If
    ' Fermeture de la connexion à la base de données
    rs.Close
    cn.Close
End Function


Public Function Table(ByRef cn As ADODB.Connection, ByVal tableName As String) As Boolean
    On Error Resume Next
    Dim rs As ADODB.Recordset
    Set rs = cn.OpenSchema(adSchemaTables, Array(Empty, Empty, tableName, "TABLE"))
    TableExists = Not rs.EOF
    rs.Close
    Set rs = Nothing
    On Error GoTo 0
End Function


Function base(ByVal fullPath As String) As Boolean
    ' Pour vérifier si la base de données existe déjà
    Database = Dir(fullPath) <> ""
End Function
